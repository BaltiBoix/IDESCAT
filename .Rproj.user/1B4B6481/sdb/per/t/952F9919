{
    "contents" : "require(RSQLite)\nrequire(jsonlite)\nrequire(dplyr)\nrequire(tidyr)\n\nurl<-'http://api.idescat.cat/emex/v1/dades.json?id=250019&lang=es'\nraw.data <- readLines(url, warn = \"F\", encoding = \"UTF-8\")\nrd <- fromJSON(raw.data, simplifyVector = FALSE, flatten = TRUE)\nremove(raw.data)\n\nrdl<-as.data.frame(rd, stringsAsFactors = FALSE)\nrdl<-gather(rdl, 'key', 'value', convert = TRUE)\nrdlist<-strsplit(rdl[,1],'[.]')\n\ndf<-data.frame(id1=character(), id2=character(), id3=character(), id4=character(), \n               id5=character(), id6=character(), id7=character(), id8=character(),\n               id9=character(), value=character(), stringsAsFactors = FALSE)\nfor(i in 1:length(rdlist)){\n      df[i,10]<-rdl[i,2]\n      for(j in 1:9){\n          df[i,j]<-rdlist[[i]][j]\n          if(is.na(df[i,j])){\n                if(!is.na(as.integer(df[i,j-1]))){\n                      df[i,9]<-as.integer(df[i,j-1])\n                      df[i,j-1]<-NA\n                }else{\n                      df[i,9]<-0\n                  }\n                break\n          }\n      }\n}\n\nfor(i in unique(as.list(select(filter(df, id3=='col'), id9))[[1]])){\n      idcol<-as.character(filter(df, id3=='col', id4=='id', id9==i)['value'])\n      df[rownames(subset(df, id3=='col' & id9==i)), 'id3']<-idcol\n}\n\nfor(i in 1:nrow(df)){\n      if(df[i,'id2'] == 'gg'){\n            if(df[i,'id3'] == 'g' & df[i,'id4'] == 'id') {\n                  idcol<-df[i, 'value']\n            }\n            if(df[i,'id3'] == 'g') {\n                  df[i, 'id3']<- idcol\n            }\n      }\n}\n\nfor(i in 1:nrow(df)){\n      if(is.na(df[i, \"id4\"])) next\n      if(df[i,'id4'] == 'tt'){\n            if(df[i,'id5'] == 't' & df[i,'id6'] == 'id') {\n                  idcol<-df[i, 'value']\n            }\n            if(df[i,'id5'] == 't') {\n                  df[i, 'id5']<- idcol\n            }\n      }\n}\n\nfor(i in 1:nrow(df)){\n      if(is.na(df[i, \"id6\"])) next\n      if(df[i,'id6'] == 'ff'){\n            if(df[i,'id7'] == 'f' & df[i,'id8'] == 'id') {\n                  idcol<-df[i, 'value']\n            }\n            if(df[i,'id7'] == 'f') {\n                  df[i, 'id7']<- idcol\n            }\n      }\n}\n\nglist<-as.list(unique(select(filter(df, grepl('^g[0-9]', id3)), id3)))\ngdf<-select(filter(df, grepl('^g[0-9]', id3), id4 == 'c'), id=id3, c=value)\n\ntlist<-as.list(unique(select(filter(df, grepl('^t[0-9]', id5)), id5)))\ntdf<-select(filter(df, grepl('^t[0-9]', id5), id6 == 'c'), id=id5, grupo_id=id3, c=value)\ntdf1<-select(filter(df, grepl('^t[0-9]', id5), id6 == 'calt'), id=id5, grupo_id=id3, calt=value)\ntdf<-left_join(tdf, tdf1)\nremove(tdf1)\n\nflist<-as.list(unique(select(filter(df, grepl('^f[0-9]', id7)), id7)))\nfdf<-select(filter(df, grepl('^f[0-9]', id7), id8 == 'c'), id=id7, grupo_id=id3, tabla_id=id5, c=value)\nfdf1<-select(filter(df, grepl('^f[0-9]', id7), id8 == 'calt'), id=id7, grupo_id=id3, tabla_id=id5, calt=value)\nfdf<-left_join(fdf,fdf1)\nremove(fdf1)\n\ndb <- dbConnect(SQLite(), 'IDESCAT.sqlite')\n\ndbSendQuery(conn = db, \"DROP TABLE IF EXISTS 'Grupos';\")\n\ndbSendQuery(conn = db,\n            \"CREATE TABLE `Grupos` (\n            `ID` TEXT NOT NULL UNIQUE,\n            `C`\tTEXT NOT NULL UNIQUE,\n            PRIMARY KEY(ID)\n);\")\n\ndbWriteTable(db, 'Grupos', gdf, append = TRUE)\n\ndbSendQuery(conn = db, \"DROP TABLE IF EXISTS 'Factores';\")\n\ndbSendQuery(conn = db,\n            \"CREATE TABLE `Factores` (\n            `ID` TEXT NOT NULL UNIQUE,\n            `GRUPO_ID` TEXT NOT NULL,\n            `TABLA_ID` TEXT NOT NULL,\n            `C` TEXT NOT NULL,\n            `CALT` TEXT,\n            PRIMARY KEY(ID)\n);\")\n\ndbWriteTable(db, 'Factores', fdf, append = TRUE)\n\ndbdf<-dbGetQuery(conn = db,\n      \"select Grupos.C as Grupo, Tablas.C as Tabla, Factores.C as Factor \n      from Factores join Tablas join Grupos\n      on Factores.GRUPO_ID=Grupos.ID and Factores.TABLA_ID=Tablas.ID\n      order by Grupos.C, Tablas.C, Factores.C;\"\n      )\n\ndbdf$Grupo <- iconv(dbdf$Grupo, \"UTF-8\", \"UTF-8\")\ndbdf$Tabla <- iconv(dbdf$Tabla, \"UTF-8\", \"UTF-8\")\ndbdf$Factor <- iconv(dbdf$Factor, \"UTF-8\", \"UTF-8\")\n\ndbDisconnect(db)\n\n",
    "created" : 1452028028523.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4132737279",
    "id" : "952F9919",
    "lastKnownWriteTime" : 1452034349,
    "path" : "~/RProjects/IDESCAT/readdades.R",
    "project_path" : "readdades.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}